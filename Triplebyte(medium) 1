Good morning! Here's your coding interview problem for today.

This problem was asked by Triplebyte.

You are given n numbers as well as n probabilities that sum up to 1. Write a function to generate one of the numbers with its corresponding probability.

For example, given the numbers [1, 2, 3, 4] and probabilities [0.1, 0.5, 0.2, 0.2], your function should return 1 10% of the time, 2 50% of the time, and 3 and 4 20% of the time.

You can generate random numbers between 0 and 1 uniformly.


Code:

from random import randrange

def random(nos, prob):
    n=len(nos)
    if n!=len(prob):
        return -1    #error
    
    s = [None]*n
    s[0] = prob[0]
    for i in range(1,n):
        s[i] = s[i-1]+prob[i]
    #print(s)
    r = randrange(1,100)
    #print(r)
    if r<=s[0]:
        return nos[0]
    for i in range(1,n):
        if s[i-1]<(r/100)<=s[i]:
            return nos[i]
    return -1
    
if __name__ == '__main__':
    nos = list(map(int, input().split(" ")))
    prob = list(map(float, input().split(" ")))
    m = {}
    for i in range(100000):
        res = random(nos, prob)
        #print(res)
        m[res] = m.get(res,0) + 0.001
    print(m)
